// po; ship1; ship2; invoice1; invoice2; pay1; pay2, or cancel at any time (protocol-only)

protocol po; (cancel + ship; (cancel + invoice; (cancel + pay))) ;;
// property [{true}*;{invoiced};{true}*] !cancelable;

rule

on po do {
  _data.items = _event.data.items;
  _data.amount = _event.data.amount;
};

on ship when {
  _event.data.items.toString() == _data.items.toString()
} do {};

on invoice when {
  _event.data.amount.toString() == _data.amount
} do invoiced { _data.date = _event.data.date };

on pay when {
  _event.data.amount == _data.amount &&
  _event.data.date < _data.date + 30
} do {};

on cancel do {};
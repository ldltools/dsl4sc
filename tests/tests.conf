# test-case definitions for shelltest (https://packages.debian.org/stretch/shelltestrunner)

# test10
mkdir -p out; rules2scxml test10.rules -o out/test10.scxml && scxmlrun out/test10.scxml
<<<
{"event":{"name":"order"}}
{"event":{"name":"_accept"}}
>>>2
js: ordered!
>>>=0

# test11-mc
rulesmc test11.rules
<<<
property [{true}*]<{true}*>ordered;
>>>
claim holds
>>>=0

# test11-2
rules2scxml test11.rules -o out/test11.scxml && scxmlrun out/test11.scxml
<<<
{"event":{"name":"order"}}
{"event":{"name":"_accept"}}
>>>2
js: ordered!
>>>=0

# test12-mc
rulesmc test12.rules
<<<
protocol (order + ship)*;;
>>>
claim holds
>>>=0

# test12
rules2scxml test12.rules -o out/test12.scxml && scxmlrun out/test12.scxml
<<<
{"event":{"name":"order"}}
{"event":{"name":"ship"}}
{"event":{"name":"_accept"}}
>>>2
js: shipped!
>>>=0

# test13
rules2scxml test13.rules -o out/test13.scxml && scxmlrun out/test13.scxml
<<<
{"event":{"name":"order"}}
{"event":{"name":"ship"}}
{"event":{"name":"_accept"}}
>>>2
js: shipped!
>>>=0

# test14-1
rules2scxml test14.rules -o out/test14.scxml && scxmlrun out/test14.scxml
<<<
{"event":{"name":"order"}}
{"event":{"name":"ship"}}
{"event":{"name":"_accept"}}
>>>2
js: shipped!
>>>=0

# test14-2
scxmlrun out/test14.scxml
<<<
{"event":{"name":"order"}}
{"event":{"name":"cancel"}}
{"event":{"name":"_accept"}}
>>>2
js: canceled!
>>>=0

# test14-3 -- "cancel" not permitted after "ship"
rules2scxml test14.rules --monitor -o out/test14_mon.scxml && scxmlrun out/test14_mon.scxml -o /dev/null
<<<
{"event":{"name":"order"}}
{"event":{"name":"ship"}}
{"event":{"name":"cancel"}}
{"event":{"name":"_accept"}}
>>>2
js: shipped!
js: _rejected
>>>=0

# test15-1
rules2scxml test15.rules -o out/test15.scxml && scxmlrun out/test15.scxml
<<<
{"event":{"name":"order"}}
{"event":{"name":"ship"}}
{"event":{"name":"_accept"}}
>>>2
js: shipped!
>>>=0

# test15-2
scxmlrun out/test15.scxml
<<<
{"event":{"name":"order"}}
{"event":{"name":"cancel"}}
{"event":{"name":"_accept"}}
>>>2
js: canceled!
>>>=0

# test16-mc (even)
rulesmc test16.rules
<<<
property
even;
[{true}*][{even}](!even | last);
[{true}*][{!even}](even | last);
>>>
claim holds
>>>=0

# test16 (even)
rules2scxml test16.rules -o out/test16.scxml && scxmlrun out/test16.scxml
<<<
{"event":{"name":"e"}}
{"event":{"name":"e"}}
{"event":{"name":"e"}}
{"event":{"name":"_accept"}}
>>>2
js: even
>>>=0

# test17-mc (even)
rulesmc test17.rules
<<<
property
even;
[{true}*][{even}](!even | last);
[{true}*][{!even}](even | last);
>>>
claim holds
>>>=0

# test20
rules2scxml test20.rules -o out/test20.scxml && scxmlrun out/test20.scxml
<<<
{"event":{"name":"e1"}}
{"event":{"name":"e2"}}
{"event":{"name":"_accept"}}
>>>2
js: p holds
>>>=0

# test21
rules2scxml test21.rules -o out/test21.scxml && scxmlrun out/test21.scxml
<<<
{"event":{"name":"e", "data" : 1}}
{"event":{"name":"_accept"}}
>>>2
js: case1
>>>=0

# test21
rules2scxml test22.rules -o out/test22.scxml && scxmlrun out/test22.scxml
<<<
{"event":{"name":"e", "data" : 1}}
{"event":{"name":"_accept"}}
>>>2
js: case1
>>>=0

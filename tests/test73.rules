// protocol + gt_ko/lt_strike

// --------------------------------------------------------------------------------
protocol

// normal
init;day_close; ((_switch2 + _switch3); day_open; day_close)*; (_switch2 + _switch3); _terminate

+

// knock-out
init;day_close; ((_switch2 + _switch3); day_open; day_close)*; _switch1; _ko_terminate
;;

// --------------------------------------------------------------------------------
property
// initial conditions
!gt_ko;
lt_strike;

// invariant
//[{true}*](gt_ko -> !lt_strike);

// --------------------------------------------------------------------------------
rule
on init do {  
    _data.s_price = _event.data.s_price;
    _data.ko_price = _event.data.ko_price;
    _data.lev = _event.data.lev;
    _data.cur_shares = _event.data.cur_shares;
    _data.n_shares = _event.data.n_shares;
    _data.g_shares = _event.data.g_shares;
    _data.expiredate = _event.data.expiredate; 
    _data.date = _event.data.date;
    };
on day_close raise _switch1 + _switch2 + _switch3
{ 
    _data.price = _event.data.price; 
    if (_data.price > _data.ko_price) { __raiseEvent("_switch1","{}"); }
    else if (_data.price >= _data.s_price) { __raiseEvent("_switch2","{}"); }
    else if (_data.price < _data.s_price) { __raiseEvent("_switch3","{}"); } ;
    };

on day_open do { _data.date = _data.date + 1;};
// ko
on _switch1 when { _data.price > _data.ko_price } do gt_ko & !lt_strike { _data.cur_shares = max (_data.cur_shares, _data.g_shares); };

// normal
on _switch3 when { _data.price < _data.s_price }
do (ensure !gt_ko & lt_strike, raise _terminate)
{
     _data.cur_shares += _data.lev * _data.n_shares; 
     if (_data.date >= _data.expiredate) { __raiseEvent("_terminate","{}"); };
};
on _switch2 when { _data.price >= _data.s_price }
do (ensure !gt_ko & !lt_strike, raise _terminate)
{ 
    _data.cur_shares += _data.lev * _data.n_shares; 
    if (_data.date >= _data.expiredate ) { __raiseEvent("_terminate","{}");};
};

// reset gt_ko and lt_strike
on day_open when !gt_ko do !gt_ko & lt_strike { _data.date = _data.date + 1;}; // same as the initial conditions
on day_open when gt_ko do false;

// --------------------------------------------------------------------------------
// extra rules -- gt_ko/lt_strike can chane only upon day_close

except on _switch1, _switch2, _switch3, day_open preserve gt_ko, lt_strike;

/*
on _ko_terminate when gt_ko do gt_ko & !lt_strike;
on _ko_terminate when !gt_ko do false;
on _ko_terminate when lt_strike do false;
//on _ko_terminate when !lt_strike do !lt_strike;

on _terminate when gt_ko do false;
on _terminate when !gt_ko & !lt_strike do !gt_ko & !lt_strike;
on _terminate when !gt_ko & lt_strike do !gt_ko & lt_strike;
*/
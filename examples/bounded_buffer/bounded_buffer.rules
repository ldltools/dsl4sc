protocol
(put + get)*;;

variable
n : nat (3);  // num of contents. 0 <= n <= 3

property
n = 0;  // initially set to 0, indicating the buffer is empty.

rule
on put when n = 0 do { buff[n++] = _event.data; } ensure n = 1;
on put when n = 1 do { buff[n++] = _event.data; } ensure n = 2;
on put when n = 2 do { buff[n++] = _event.data; } ensure n = 3;
on put when n = 3 ensure false;

on get when n = 0 ensure false;
on get when n = 1 do { console.log (n, buff[--n]); buff[n] = null; } ensure n = 0;
on get when n = 2 do { console.log (n, buff[--n]); buff[n] = null; } ensure n = 1;
on get when n = 3 do { console.log (n, buff[--n]); buff[n] = null; } ensure n = 2;

implementation
{
  <datamodel>
    <data id="n" expr="0"/>
    <data id="buff" expr="[]"/>
  </datamodel>
}
